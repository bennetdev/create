program ::= {statement}
statement ::= "PRINT" (expression | string) nl
    | "if" comparison "{" nl {statement} "}" nl
    | "while" comparison "{" nl {statement} "}" nl
    | "var" ident "=" expression nl
    | "repeat" ident "{" nl {expression} "}" nl
    | "func" ident "(" {variables} ")" nl "{" nl {statements} "}"
    | ident.ident"(" {arguments} ")"
comparison ::= expression (("==" | "!=" | ">" | ">=" | "<" | "<=") expression)+
expression ::= term {( "-" | "+" ) term}
term ::= unary {( "/" | "*" ) unary} | string
unary ::= ["+" | "-"] primary
primary ::= number | ident | "(" {expression} ")"
ident ::= variable | function | method
nl ::= '\n'+