program ::= {statement}
statement ::= "PRINT" (expression | string) nl
    | "IF" comparison "THEN" nl {statement} "ENDIF" nl
    | "WHILE" comparison "{" nl {statement} "}" nl
    | "LABEL" ident nl
    | "GOTO" ident nl
    | "LET" ident "=" expression nl
    | "INPUT" ident nl
    | "repeat" ident "{" nl {expression} "}" nl
    | function"(" {variables} ")" nl
comparison ::= expression (("==" | "!=" | ">" | ">=" | "<" | "<=") expression)+
expression ::= term {( "-" | "+" ) term}
term ::= unary {( "/" | "*" ) unary} | string
unary ::= ["+" | "-"] primary
primary ::= number | ident | "(" {expression} ")"
ident ::= variable | function
nl ::= '\n'+